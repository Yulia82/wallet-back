{
	"openapi": "3.0.1",
	"info": {
		"version": "0.0.1",
		"title": "Wallet API",
		"description": "Showing off swagger-ui-express",
		"license": {
			"name": "MIT",
			"url": "https://opensource.org/licenses/MIT"
		}
	},
	"consumes": ["application/json"],
	"produces": ["application/json"],
	"servers": [{ "url": "https://wallet-coconat.herokuapp.com" }],
	"tags": [
		{
			"name": "Auth",
			"description": "Authorization endpoints"
		},
		{
			"name": "Transactions",
			"description": "Authorization endpoints"
		}
	],
	"paths": {
		"/api/user/signup": {
			"post": {
				"tags": ["Auth"],
				"summary": "User registration",
				"parameters": [],
				"requestBody": {
					"description": "Registration's body",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RegistrationRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RegistrationResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request (invalid request body)",
						"content": {}
					},
					"409": {
						"description": "Provided email already exists",
						"content": {}
					}
				}
			}
		},
		"/api/user/verify": {
			"post": {
				"tags": ["Auth"],
				"summary": "Resend verify token",
				"parameters": [],
				"requestBody": {
					"description": "refresh verify token's body",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RefreshVerifyRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RefreshVerifyResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request (invalid request body)",
						"content": {}
					},
					"409": {
						"description": "Provided email already exists",
						"content": {}
					}
				}
			}
		},
		"/api/user/login": {
			"post": {
				"tags": ["Auth"],
				"summary": "User autenthification",
				"parameters": [],
				"requestBody": {
					"description": "Logins's body",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LoginResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request (invalid request body)",
						"content": {}
					},
					"409": {
						"description": "Provided email already exists",
						"content": {}
					}
				}
			}
		},
		"/api/user/logout": {
			"get": {
				"tags": ["Auth"],
				"summary": "User autenthification",
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"responses": {
					"201": {
						"description": "Successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LogoutResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request (invalid request body)",
						"content": {}
					},
					"409": {
						"description": "Provided email already exists",
						"content": {}
					}
				}
			}
		},
		"/api/user/current": {
			"get": {
				"tags": ["Auth"],
				"summary": "Get current user",
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"responses": {
					"201": {
						"description": "Successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CurrentUserResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request (invalid request body)",
						"content": {}
					},
					"409": {
						"description": "Provided email already exists",
						"content": {}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"RegistrationRequest": {
				"type": "object",
				"required": ["email", "password"],
				"properties": {
					"email": {
						"type": "string",
						"description": "User's email",
						"format": "email"
					},
					"password": {
						"type": "string",
						"description": "User's password",
						"example": "qwerty123"
					},
					"name": {
						"type": "string",
						"description": "User's name",
						"example": "Erika"
					}
				}
			},
			"RegistrationResponse": {
				"type": "array",
				"items": {
					"type": "object",
					"properties": {
						"email": {
							"type": "string",
							"description": "User's email",
							"format": "email"
						},
						"message": {
							"type": "string",
							"descriptions": "Check your email and complete registration"
						},
						"successEmail": {
							"type": "boolean",
							"description": "is email verify send",
							"example": true
						},
						"name": {
							"type": "string",
							"description": "User's name",
							"example": "Erika"
						}
					}
				},
				"example": [
					{
						"email": "1@gmail.com",
						"message": "Check your email and complete registration",
						"successEmail": true,
						"name": "Erika"
					}
				]
			},

			"RefreshVerifyRequest": {
				"type": "object",
				"required": ["email"],
				"properties": {
					"email": {
						"type": "string",
						"description": "User's email",
						"format": "email"
					}
				}
			},
			"RefreshVerifyResponse": {
				"type": "array",
				"items": {
					"type": "object",
					"properties": {
						"email": {
							"type": "string",
							"description": "User's email",
							"format": "email"
						},
						"message": {
							"type": "string",
							"descriptions": "Check your email and complete registration"
						},
						"successEmail": {
							"type": "boolean",
							"description": "is email verify send",
							"example": true
						},
						"name": {
							"type": "string",
							"description": "User's name",
							"example": "Erika"
						}
					}
				},
				"example": [
					{
						"email": "1@gmail.com",
						"message": "Check your email and complete registration",
						"successEmail": true,
						"name": "Erika"
					}
				]
			},
			"LoginRequest": {
				"type": "object",
				"required": ["email", "password"],
				"properties": {
					"email": {
						"type": "string",
						"description": "User's email",
						"format": "email"
					},
					"password": {
						"type": "string",
						"description": "User's password",
						"example": "qwerty123"
					}
				}
			},
			"LoginResponse": {
				"type": "array",
				"items": {
					"type": "object",
					"properties": {
						"balance": {
							"type": "number",
							"description": "User's balance",
							"example": 456
						},
						"token": {
							"type": "string",
							"description": "User's token",
							"format": "jwt"
						},
						"refreshToken": {
							"type": "string",
							"description": "User's refresh token",
							"format": "jwt"
						},
						"name": {
							"type": "string",
							"description": "User's name",
							"example": "Erika"
						}
					}
				},
				"example": [
					{
						"token": "token short",
						"refreshToken": "token long",
						"name": "Erika"
					}
				]
			},
			"LogoutResponse": {
				"type": "array",
				"items": {}
			},
			"CurrentUserResponse": {
				"type": "array",
				"items": {
					"type": "object",
					"properties": {
						"email": {
							"type": "string",
							"description": "User's email",
							"format": "email"
						},
						"name": {
							"type": "string",
							"description": "User's name",
							"example": "Erika"
						},
						"balance": {
							"type": "number",
							"description": "User's balance",
							"example": 456
						}
					}
				}
			}
		},
		"securitySchemes": {
			"Bearer": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	}
}
